@RestResource(urlMapping='/YmcaEvents/*')
global with sharing class EbizYmcaEvents{

    @HttpGet
    global static String YmcaEvents() {
        
        String i_tag;
        Integer i_zipcode;
        Integer i_distance;
        Integer i_age;
        Datetime i_startingTime;
        Datetime i_endingTime;
        Boolean i_monday;
        Boolean i_tuesday;
        Boolean i_wednesday;
        Boolean i_thursday;
        Boolean i_friday;
        Boolean i_saturday;
        Boolean i_sunday;
        Decimal i_lon;
        Decimal i_lat;
        
        EbizApiResponse response = new EbizApiResponse();
        RestResponse res = RestContext.response;
       try{
        //Note: The i_ notation is used to signify this is a user input.
        i_monday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('monday'));
        i_tuesday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('tuesday'));
        i_wednesday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('wednesday'));
        i_thursday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('thursday'));
        i_friday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('friday'));
        i_saturday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('saturday'));
        i_sunday = EbizYmcaEventsValidationUtil.validateDayInput(RestContext.request.params.get('sunday'));
        i_tag = RestContext.request.params.get('tag');
        i_age = EbizYmcaEventsValidationUtil.validateAgeInput(RestContext.request.params.get('age'));
        i_zipcode = EbizYmcaEventsValidationUtil.validateZipcode(RestContext.request.params.get('zipcode'));
        i_distance = EbizYmcaEventsValidationUtil.validateDistance(RestContext.request.params.get('distance'));
        i_startingTime = EbizYmcaEventsValidationUtil.validateTimeInput(RestContext.request.params.get('startingTime'));
        i_endingTime = EbizYmcaEventsValidationUtil.validateTimeInput(RestContext.request.params.get('endingTime'));
        if(i_zipcode != null){
            List<Decimal> calculatedGeoCode = EbizGeographicalUtil.zipCodetoGeoCode(i_zipcode);
            if(calculatedGeoCode != null){
                i_lon = calculatedGeoCode[0];
                i_lat = calculatedGeoCode[1];
            }
        }
    
        //Note:This error message will change for production enviroments.
        if(!EbizYmcaEventsValidationUtil.validateTag(i_tag)){
            response.setMessage('Invalid Tag');
            return response.jsonResponse();
        }
        
        List<Event__c> eventsLists = new List<Event__c>();
        List<EbizYmcaEventJson> filteredEventsJson = new List<EbizYmcaEventJson>();

        eventsLists = [SELECT Id,
                        Delivery_Location_Id__c,
                        Delivery_Location_Id__r.Name,
                        Delivery_Location_Id__r.Address_Line_1__c,
                        Delivery_Location_Id__r.Postal_Code__c,
                        Activity_Start_Date__c,
                        Activity_End_Date__c,
                        Activity_Start_Time__c,
                        Activity_End_Time__c,
                        High_Age__c,
                        Low_Age__c,
                        High_Grade__c,
                        Low_Grade__c,
                        Gender__c,
                        Season__c,
                        dow_Monday__c,
                        dow_Tuesday__c,
                        dow_Wednesday__c,
                        dow_Thursday__c,
                        dow_Friday__c,
                        dow_Saturday__c,
                        dow_Sunday__c,
                        Registration_Open__c,
                        Available_Class_Slots__c,
                        Product__c,
                        Product__r.Payment_Frequency__c,
                        Product_Family__c,
                        Parent_Product__c,
                        CreatedDate,
                        (SELECT Event__c.UnitPrice FROM PricebookEntry WHERE Id = '01sf4000003HWCIAA4'),
                        (SELECT Event__c.UnitPrice FROM PricebookEntry WHERE Id = '01sf4000003HWCKAA4')
                        FROM Event__c 
                        WHERE  
                        Delivery_Location_Id__r.Postal_Code__c != NULL
                        AND Registration_Open__c = TRUE 
                        AND Product__r.Parent_Product__r.Tags__c INCLUDES(:i_tag) 
                        ORDER BY Activity_Start_Date__c, Parent_Product__c
                        LIMIT 300];
            Integer eventHighAge;
            Integer eventLowAge;
            DateTime eventActivityStartTime;
            DateTime eventActivityEndTime;
            for(Event__c evn: eventsLists){
                eventHighAge = EbizYmcaEventsValidationUtil.convertEventAge(evn.High_Age__c);
                eventLowAge = EbizYmcaEventsValidationUtil.convertEventAge(evn.Low_Age__c);
                eventActivityStartTime = EbizYmcaEventsValidationUtil.convertEventTime(evn.Activity_Start_Time__c);
                eventActivityEndTime = EbizYmcaEventsValidationUtil.convertEventTime(evn.Activity_End_Time__c);
                if(EbizYmcaEventsFilterRulesUtil.filterByAgeRule(i_age, eventLowAge, eventHighAge) == true){
                    if(EbizYmcaEventsFilterRulesUtil.filterByDaysRule(i_monday, i_tuesday,i_wednesday,i_thursday,i_friday,i_saturday, i_sunday, evn.dow_Monday__c, evn.dow_Tuesday__c, evn.dow_Wednesday__c, evn.dow_Thursday__c, evn.dow_Friday__c, evn.dow_Saturday__c , evn.dow_Sunday__c)){
                         if(EbizYmcaEventsFilterRulesUtil.filterByTimeRule(i_startingTime, i_endingTime, eventActivityStartTime , eventActivityEndTime)){
                             Integer eventZipCode = EbizYmcaEventsValidationUtil.validateZipcode(evn.Delivery_Location_Id__r.Postal_Code__c);
                             if(EbizYmcaEventsFilterRulesUtil.filterByDistanceRule(i_distance, eventZipCode, i_lon, i_lat)){
                                    EbizYmcaEventJson filteredEvent = new EbizYmcaEventJson();
                                    filteredEvent.id = evn.Id;
                                    filteredEvent.locationName = evn.Delivery_Location_Id__r.Name;
                                    filteredEvent.locationAddress = evn.Delivery_Location_Id__r.Address_Line_1__c;
                                    filteredEvent.locationZipCode =  evn.Delivery_Location_Id__r.Postal_Code__c;
                                    filteredEvent.startDate = evn.Activity_Start_Date__c;
                                    filteredEvent.endDate = evn.Activity_End_Date__c;
                                    filteredEvent.startTime = evn.Activity_Start_Time__c;
                                    filteredEvent.endTime = evn.Activity_End_Time__c;
                                    filteredEvent.highAge = eventHighAge;
                                  	filteredEvent.lowAge = eventlowAge;
                                    filteredEvent.monday = evn.dow_Monday__c;
                                    filteredEvent.tuesday = evn.dow_Tuesday__c;
                                    filteredEvent.wednesday = evn.dow_Wednesday__c;
                                    filteredEvent.thursday = evn.dow_Thursday__c;
                                    filteredEvent.friday = evn.dow_Friday__c;
                                    filteredEvent.saturday = evn.dow_Saturday__c;
                                    filteredEvent.sunday = evn.dow_Sunday__c;
                                    filteredEvent.gender = evn.Gender__c;
                                    filteredEvent.memberPrice = '';
                                    filteredEvent.nonMemberPrice = '';
                                    filteredEvent.description = evn.Product_Family__c + ':' + evn.Parent_Product__c;
                                    filteredEvent.parentProduct = evn.Parent_Product__c;
                                    filteredEvent.createdDate = evn.CreatedDate;     
                                    //TODO: This can be optimized, the filter by distance rule above runs these methods as well.
                                    List <Decimal> geoCode = EbizGeographicalUtil.zipCodetoGeoCode(eventZipCode);
                                 	Decimal distanceToEvent;
                                    if(geoCode != null){
                                      distanceToEvent = EbizGeographicalUtil.distanceCalculator(geoCode[0], geoCode[1], i_lon, i_lat);
                                    }
                                 	filteredEvent.distance = distanceToEvent;
                                    if(filteredEvent.distance != null){
                                      filteredEventsJson.add(filteredEvent);
                                    }
                             }
                         }
                    }
                }               
            }
            response.setSuccess(true);
            filteredEventsJson.sort();
            response.setData(filteredEventsJson);
            res.statusCode = 200; 
            res.responseBody = Blob.valueOf(response.jsonResponse());
            return response.jsonResponse();
       }
       catch(Exception e){
            response.setSuccess(false);
            response.setMessage(e.getMessage());
            response.setMessage(i_zipcode);
            res.statusCode = 200; 
            res.responseBody = Blob.valueOf(response.jsonResponse());
            return response.jsonResponse();
       }
    }
}